; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = LIGHT_EDITION_V3_3

[env]
platform = espressif32@^6.3.2
; for USE_ULP: use a special branch and git submodule add https://github.com/boarchuz/HULP.git
; platform_packages =
;   framework-arduinoespressif32 @ https://github.com/marcovannoord/arduino-esp32.git#idf-release/v4.2
;   toolchain-xtensa32 @ ~2.80400.0
board = pico32
framework = arduino
board_build.partitions = min_spiffs.csv ; OTA updates (two app slots), but no space for the SPIFFS (as it is currently not used)
monitor_filters = esp32_exception_decoder ; Well, it works?!
lib_deps =
	adafruit/Adafruit Unified Sensor@^1.1.9
	adafruit/Adafruit BusIO@^1.14.1
	makuna/RTC@^2.4.0
	bblanchon/ArduinoJson@^6.21.2
	finitespace/BME280@^3.0.0 ; TODO Use the more popular Adafruit BME280 Library instead (also true for others?)?
	mprograms/QMC5883LCompass@^1.1.1
upload_speed = 460800
monitor_speed = 115200
; Define additional build stage scripts - used to "compile" the html or define additional information
extra_scripts =
	pre:scripts/build/prebuild_info.py
	pre:scripts/build/prebuild_assets.py
	pre:scripts/build/prebuild_cppflags.py
	pre:scripts/build/prebuild_lua.py ; Needed to generate the .cxx file(s), enabled via "OSW_FEATURE_LUA" build flag
build_unflags = -std=gnu++11 # The correct flag will be set by the cppflags python script...


[env:LIGHT_EDITION_V3_3_LUA]
build_flags =
	-D OSW_TARGET_PLATFORM_HEADER='"platform/LIGHT_EDITION_V3_3.h"'
	-D OSW_FEATURE_STATS_STEPS
	-D OSW_FEATURE_WIFI
	-D OSW_FEATURE_LUA
	-D LUA_C89_NUMBERS ; Required by OSW_FEATURE_LUA
	-O2
	-Wdouble-promotion
	-ffunction-sections
	-fdata-sections
;	-Wshadow
build_type = debug


; Light edition by hardware revisions
; This revision did not change anything on hardware or software level, it just resized the pcb from V3_2
[env:LIGHT_EDITION_V3_3]
build_flags =
	-D OSW_TARGET_PLATFORM_HEADER='"platform/LIGHT_EDITION_V3_3.h"'
	-D OSW_FEATURE_STATS_STEPS
	-D OSW_FEATURE_WIFI
build_type = debug

[env:LIGHT_EDITION_V4_0]
build_flags =
	-D OSW_TARGET_PLATFORM_HEADER='"platform/LIGHT_EDITION_V4_0.h"'
	-D OSW_FEATURE_STATS_STEPS
	-D OSW_FEATURE_WIFI
	-D OSW_FEATURE_WIFI_ONBOOT
build_type = debug

; Light edition other stuff
[env:LIGHT_EDITION_DEV_LUA]
build_flags =
	-D OSW_TARGET_PLATFORM_HEADER='"platform/LIGHT_EDITION_V3_3.h"'
	-D OSW_FEATURE_LUA
	-D OSW_FEATURE_WIFI
	-D LUA_C89_NUMBERS ; Required by OSW_FEATURE_LUA
extra_scripts =
	pre:scripts/build/prebuild_info.py
	pre:scripts/build/prebuild_assets.py
	pre:scripts/build/prebuild_cppflags.py
	pre:scripts/build/prebuild_lua.py ; Needed to generate the .cxx file(s)
build_type = debug

; GPS edition by hardware revisions
[env:GPS_EDITION_V3_1]
build_flags =
	-D OSW_TARGET_PLATFORM_HEADER='"platform/GPS_EDITION_V3_1.h"'
	-D GPS_EDITION
	-D PROGMEM_TILES
	-D BOARD_HAS_PSRAM
	-mfix-esp32-psram-cache-issue
	-D OSW_FEATURE_STATS_STEPS
	-D OSW_FEATURE_WIFI
	-D OSW_FEATURE_WIFI_APST
	-D OSW_FEATURE_WIFI_ONBOOT
build_type = debug

; GPS edition other stuff
[env:GPS_EDITION_DEV_ROTATED]
build_flags =
	-D OSW_TARGET_PLATFORM_HEADER='"platform/GPS_EDITION_V3_1.h"'
	-D PROGMEM_TILES
	-D GPS_EDITION_ROTATED
	-D BOARD_HAS_PSRAM
	-mfix-esp32-psram-cache-issue
	-D OSW_FEATURE_STATS_STEPS
	-D OSW_FEATURE_WIFI
	-D OSW_FEATURE_WIFI_APST
	-D OSW_FEATURE_WIFI_ONBOOT
build_type = debug
