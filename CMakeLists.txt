cmake_minimum_required (VERSION 2.8.11)
project (OSW-OS-Emulator)

set(CMAKE_CXX_STANDARD 20)

# For threads
set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)

# This uses pkg-config, as sdl2-image does not has any CMake bindings (and the sdl2 package via vcpkg is just broken under Linux)
INCLUDE(FindPkgConfig)
PKG_SEARCH_MODULE(SDL2 REQUIRED sdl2)
PKG_SEARCH_MODULE(SDL2IMAGE REQUIRED SDL2_image>=2.0.0)

# Pngle
file(GLOB_RECURSE SOURCES_Pngle ./lib/pngle/*.c)
add_library(Pngle ${SOURCES_Pngle})
target_include_directories(Pngle PUBLIC ./lib/pngle/)

# oswLib
file(GLOB_RECURSE SOURCES_OSW_LIB ./lib/lib-open-smartwatch/*.cpp)
add_library(oswLib ${SOURCES_OSW_LIB})
target_link_libraries(oswLib LINK_PUBLIC
    ${SDL2_LIBRARY} ${SDL2IMAGE_LIBRARIES}
)
target_include_directories(oswLib PUBLIC
    ./lib/lib-open-smartwatch
    ${SDL2_INCLUDE_DIRS} ${SDL2IMAGE_INCLUDE_DIRS}
)
target_compile_definitions(oswLib PUBLIC
    OSW_EMULATOR=1
)

# ArduinoJSON
add_subdirectory(emulator/lib/ArduinoJson)

# Jzon
add_library(Jzon emulator/lib/Jzon/Jzon.cpp)
target_include_directories(Jzon PUBLIC emulator/lib/Jzon/)

# ImGUI
add_library(ImGUI
    emulator/lib/ImGUI/imgui.cpp
    emulator/lib/ImGUI/imgui_draw.cpp
    emulator/lib/ImGUI/imgui_widgets.cpp
    emulator/lib/ImGUI/imgui_tables.cpp
    emulator/lib/ImGUI/backends/imgui_impl_sdl.cpp
    emulator/lib/ImGUI/backends/imgui_impl_sdlrenderer.cpp
)
target_include_directories(ImGUI PUBLIC
    emulator/lib/ImGUI/
    emulator/lib/ImGUI/backends
    ${SDL2_INCLUDE_DIRS}
)
target_link_libraries(ImGUI LINK_PUBLIC
    ${SDL2_LIBRARY}
    ${SDL2IMAGE_LIBRARIES}
)

# Emulator
file(GLOB_RECURSE SOURCES_OSW ./src/*.cpp)
list(FILTER SOURCES_OSW EXCLUDE REGEX ".*/src/devices/bma400\\.cpp$")
list(FILTER SOURCES_OSW EXCLUDE REGEX ".*/src/devices/bme280\\.cpp$")
list(FILTER SOURCES_OSW EXCLUDE REGEX ".*/src/devices/ds3231mz\\.cpp$")
list(FILTER SOURCES_OSW EXCLUDE REGEX ".*/src/devices/qmc5883l\\.cpp$")
list(FILTER SOURCES_OSW EXCLUDE REGEX ".*/src/hal/esp32/sd_filesystem\\.cpp$")
list(FILTER SOURCES_OSW EXCLUDE REGEX ".*/src/hal/esp32/spiffs_filesystem\\.cpp$")
list(FILTER SOURCES_OSW EXCLUDE REGEX ".*/src/hal/gps\\.cpp$")
list(FILTER SOURCES_OSW EXCLUDE REGEX ".*/src/hal/sd\\.cpp$")
list(FILTER SOURCES_OSW EXCLUDE REGEX ".*/src/services/OswServiceTaskBLECompanion\\.cpp$")
list(FILTER SOURCES_OSW EXCLUDE REGEX ".*/src/services/OswServiceTaskMemMonitor\\.cpp$")
file(GLOB_RECURSE SOURCES_OSW_EMULATOR ./emulator/src/*.cpp)
add_executable(emulator.run
    ${SOURCES_OSW}
    ${SOURCES_OSW_EMULATOR}
)
target_include_directories(emulator.run PUBLIC
    ./emulator/include
    ./include
    ./lib/lib-open-smartwatch
    emulator/lib/Jzon/
    ${SDL2_INCLUDE_DIRS}
    ${SDL2IMAGE_INCLUDE_DIRS}
)
target_link_libraries(emulator.run LINK_PUBLIC
    oswLib
    Pngle
    ArduinoJson
    Threads::Threads
    Jzon
    ${SDL2_LIBRARY}
    ${SDL2IMAGE_LIBRARIES}
    ImGUI
)
target_compile_definitions(emulator.run PUBLIC
    OSW_TARGET_PLATFORM_HEADER="platform/EMULATOR.h"
    OSW_EMULATOR=1
    $<$<CONFIG:Debug>:
      DEBUG=1 # Just for legacy reasons
    >
    $<$<CONFIG:Release>:
      NDEBUG=1
    >
)
target_compile_options(emulator.run PUBLIC
  $<$<CONFIG:Debug>:
    -O0
    -g3
    -Wall
  >
  $<$<CONFIG:Release>:
    -O4
  >
)

# Including sl2 using the system libraries is broken under MacOS, so we have to add this path manually...
if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
    link_directories(/usr/local/lib)
endif()